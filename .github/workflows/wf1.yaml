# This is a basic workflow to help you get started with Action

name: CI-actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: 
      - actions1
  pull_request:
    branches: 
      - actions1

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Reading screts 3
        run: |
          echo secret ${{ secrets.MY_NAME }}
          echo ${{ secrets.SECRET_TOKEN }}
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
        
      - name: repo name
        run: |
             echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
             echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
              ls ${{ github.workspace }}
              echo "üçè This job's status is ${{ job.status }}."

#      - id: files

      - name: Get all files.  
        uses: jitterbit/get-changed-files@v1
        run: |
          for changed_file in ${{ steps.files.outputs.all }}; do
            echo "Do something with this ${changed_file}."
          done
